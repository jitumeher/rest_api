<?php

defined('BASEPATH') OR exit('No direct script access allowed');

// This can be removed if you use __autoload() in config.php OR use Modular Extensions
require APPPATH . '/libraries/REST_Controller.php';

/**
 * This is an example of a few basic user interaction methods you could use
 * all done with a hardcoded array
 *
 * @package         CodeIgniter
 * @subpackage      Rest Server
 * @category        Controller
 * @author          Phil Sturgeon, Chris Kacerguis
 * @license         MIT
 * @link            https://github.com/chriskacerguis/codeigniter-restserver
 */
class Token_Controller extends REST_Controller {

    function __construct()
    {
        // Construct the parent class
        parent::__construct();
        $this->load->database();
        $this->load->model("Token_model");
      
    }

    public function login_post()
    {
    	$http_header =getallheaders();
    	$userId=$http_header['userId'];
    	$password=$http_header['password'];
    	$token=md5(uniqid(rand(), true));
    	$time=time() + 24*60*60;
    	$ctime=time();
    	$response=$this->Token_model->tokenGenerate ($userId,$password,$token,$time);
    	if($response){
    		$message = [
    				'status' => 'success', // Automatically generated by the model
    				'token' => $token,
    				'remainTime' => $ctime
    		];
    		$this->set_response($message, REST_Controller::HTTP_CREATED); // CREATED (201) being the HTTP response code
    	}else{
    		$message = [
    				'status' => false, // Automatically generated by the model
    				'error' => 'invalid user',
    				
    		];
    		$this->set_response($message, REST_Controller::HTTP_BAD_REQUEST); // CREATED (201) being the HTTP response code
    	}
    	
    	 
    	
    }

    public function users_post()
    {
        // $this->some_model->update_user( ... );
        $message = [
            'id' => 100, // Automatically generated by the model
            'name' => $this->post('name'),
            'email' => $this->post('email'),
            'message' => 'Added a resource'
        ];

        $this->set_response($message, REST_Controller::HTTP_CREATED); // CREATED (201) being the HTTP response code
    }

    public function users_delete()
    {
        $id = (int) $this->get('id');

        // Validate the id.
        if ($id <= 0)
        {
            // Set the response and exit
            $this->response(NULL, REST_Controller::HTTP_BAD_REQUEST); // BAD_REQUEST (400) being the HTTP response code
        }

        // $this->some_model->delete_something($id);
        $message = [
            'id' => $id,
            'message' => 'Deleted the resource'
        ];

        $this->set_response($message, REST_Controller::HTTP_NO_CONTENT); // NO_CONTENT (204) being the HTTP response code
    }
    public function usersdata_delete()
    {
    	
    
    	$message = "jitu";
    
    	$this->set_response($message, REST_Controller::HTTP_CREATED); // NO_CONTENT (204) being the HTTP response code
    }

}
